{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n$('.button-bubble').each(function() {\r\n  var $circlesTopLeft = $(this).parent().find('.circle.top-left');\r\n  var $circlesBottomRight = $(this).parent().find('.circle.bottom-right');\r\n\r\n  var tl = new TimelineLite();\r\n  var tl2 = new TimelineLite();\r\n\r\n  var btTl = new TimelineLite({ paused: true });\r\n\r\n  tl.to($circlesTopLeft, 1.2, { x: -25, y: -25, scaleY: 2, ease: SlowMo.ease.config(0.1, 0.7, false) });\r\n  tl.to($circlesTopLeft.eq(0), 0.1, { scale: 0.2, x: '+=6', y: '-=2' });\r\n  tl.to($circlesTopLeft.eq(1), 0.1, { scaleX: 1, scaleY: 0.8, x: '-=10', y: '-=7' }, '-=0.1');\r\n  tl.to($circlesTopLeft.eq(2), 0.1, { scale: 0.2, x: '-=15', y: '+=6' }, '-=0.1');\r\n  tl.to($circlesTopLeft.eq(0), 1, { scale: 0, x: '-=5', y: '-=15', opacity: 0 });\r\n  tl.to($circlesTopLeft.eq(1), 1, { scaleX: 0.4, scaleY: 0.4, x: '-=10', y: '-=10', opacity: 0 }, '-=1');\r\n  tl.to($circlesTopLeft.eq(2), 1, { scale: 0, x: '-=15', y: '+=5', opacity: 0 }, '-=1');\r\n\r\n  var tlBt1 = new TimelineLite();\r\n  var tlBt2 = new TimelineLite();\r\n\r\n  tlBt1.set($circlesTopLeft, { x: 0, y: 0, rotation: -45 });\r\n  tlBt1.add(tl);\r\n\r\n  tl2.set($circlesBottomRight, { x: 0, y: 0 });\r\n  tl2.to($circlesBottomRight, 1.1, { x: 30, y: 30, ease: SlowMo.ease.config(0.1, 0.7, false) });\r\n  tl2.to($circlesBottomRight.eq(0), 0.1, { scale: 0.2, x: '-=6', y: '+=3' });\r\n  tl2.to($circlesBottomRight.eq(1), 0.1, { scale: 0.8, x: '+=7', y: '+=3' }, '-=0.1');\r\n  tl2.to($circlesBottomRight.eq(2), 0.1, { scale: 0.2, x: '+=15', y: '-=6' }, '-=0.2');\r\n  tl2.to($circlesBottomRight.eq(0), 1, { scale: 0, x: '+=5', y: '+=15', opacity: 0 });\r\n  tl2.to($circlesBottomRight.eq(1), 1, { scale: 0.4, x: '+=7', y: '+=7', opacity: 0 }, '-=1');\r\n  tl2.to($circlesBottomRight.eq(2), 1, { scale: 0, x: '+=15', y: '-=5', opacity: 0 }, '-=1');\r\n\r\n  tlBt2.set($circlesBottomRight, { x: 0, y: 0, rotation: 45 });\r\n  tlBt2.add(tl2);\r\n\r\n  btTl.add(tlBt1);\r\n  btTl.to($(this).parent().find('.button.effect-button'), 0.8, { scaleY: 1.1 }, 0.1);\r\n  btTl.add(tlBt2, 0.2);\r\n  btTl.to($(this).parent().find('.button.effect-button'), 1.8, { scale: 1, ease: Elastic.easeOut.config(1.2, 0.4) }, 1.2);\r\n\r\n  btTl.timeScale(2.6);\r\n\r\n  $(this).on('mouseover', function() {\r\n    btTl.restart();\r\n  });\r\n});\r\n\r\n\r\n// Slick slider\r\n\r\n$(document).ready(function() {\r\n\r\n  $('.slider-number').slick({\r\n  infinite: false,\r\n  slidesToShow: 4,\r\n  slidesToScroll: 1,\r\n  appendArrows: $('.arrows-main--number'),\r\n  prevArrow: '<div class=\"arrow-btn arrow-btn--prev\"><svg><use xlink:href=\"../img/sprite.svg#icon-leftArrow\"></use></svg></div>',\r\n  nextArrow: '<div class=\"arrow-btn arrow-btn--next\"><svg><use xlink:href=\"../img/sprite.svg#icon-rightArrow\"></use></svg></div>',\r\n});\r\n\r\n\r\n\r\n});\r\n\r\n\r\n// canvas\r\n\r\nwindow.onload = function () {\r\n  //functions definition\r\n\r\n  //class definition\r\n  class segm {\r\n    constructor(x, y, l) {\r\n      this.b = Math.random()*1.9+0.1;\r\n      this.x0 = x;\r\n      this.y0 = y;\r\n      this.a = Math.random() * 2 * Math.PI;\r\n      this.x1 = this.x0 + l * Math.cos(this.a);\r\n      this.y1 = this.y0 + l * Math.sin(this.a);\r\n      this.l = l;\r\n    }\r\n    update(x, y) {\r\n      this.x0 = x;\r\n      this.y0 = y;\r\n      this.a = Math.atan2(this.y1 - this.y0, this.x1 - this.x0);\r\n      this.x1 = this.x0 + this.l * Math.cos(this.a);\r\n      this.y1 = this.y0 + this.l * Math.sin(this.a);\r\n    }\r\n  }\r\n  class rope {\r\n    constructor(tx, ty, l, b, slq, typ) {\r\n      if(typ == \"l\"){\r\n        this.res = l / 2;\r\n      }else{\r\n        this.res = l / slq;\r\n      }\r\n      this.type = typ;\r\n      this.l = l;\r\n      this.segm = [];\r\n      this.segm.push(new segm(tx, ty, this.l / this.res));\r\n      for (let i = 1; i < this.res; i++) {\r\n        this.segm.push(\r\n          new segm(this.segm[i - 1].x1, this.segm[i - 1].y1, this.l / this.res)\r\n        );\r\n      }\r\n      this.b = b;\r\n    }\r\n    update(t) {\r\n      this.segm[0].update(t.x, t.y);\r\n      for (let i = 1; i < this.res; i++) {\r\n        this.segm[i].update(this.segm[i - 1].x1, this.segm[i - 1].y1);\r\n      }\r\n    }\r\n    show() {\r\n      if(this.type == \"l\"){\r\n      c.beginPath();\r\n      for (let i = 0; i < this.segm.length; i++) {\r\n        c.lineTo(this.segm[i].x0, this.segm[i].y0);\r\n      }\r\n      c.lineTo(\r\n        this.segm[this.segm.length - 1].x1,\r\n        this.segm[this.segm.length - 1].y1\r\n      );\r\n      c.strokeStyle = \"#43bea2\";\r\n      c.lineWidth = this.b;\r\n      c.stroke();\r\n\r\n      c.beginPath();\r\n      c.arc(this.segm[0].x0, this.segm[0].y0, 1, 0, 2 * Math.PI);\r\n      c.fillStyle = \"#43bea2\";\r\n      c.fill();\r\n\r\n      c.beginPath();\r\n      c.arc(\r\n        this.segm[this.segm.length - 1].x1,\r\n        this.segm[this.segm.length - 1].y1,\r\n        2,\r\n        0,\r\n        2 * Math.PI\r\n      );\r\n      c.fillStyle = \"#43bea2\";\r\n      c.fill();\r\n      }else{\r\n      for (let i = 0; i < this.segm.length; i++) {\r\n        c.beginPath();\r\n        c.arc(this.segm[i].x0, this.segm[i].y0, this.segm[i].b, 0, 2*Math.PI);\r\n        c.fillStyle = \"#43bea2\";\r\n      c.fill();\r\n      }\r\n        c.beginPath();\r\n      c.arc(\r\n        this.segm[this.segm.length - 1].x1,\r\n        this.segm[this.segm.length - 1].y1,\r\n        2, 0, 2*Math.PI\r\n      );\r\n      c.fillStyle = \"#43bea2\";\r\n      c.fill();\r\n      }\r\n    }\r\n  }\r\n\r\n  //setting up canvas\r\n  let c = init(\"canvas\").c,\r\n    canvas = init(\"canvas\").canvas,\r\n    w = (canvas.width = window.innerWidth),\r\n    h = (canvas.height = window.innerHeight),\r\n    ropes = [];\r\n\r\n  //variables definition\r\n  let nameOfVariable = \"value\",\r\n    mouse = {},\r\n    last_mouse = {},\r\n    rl = 50,\r\n    randl = [],\r\n    target = { x: w/2, y: h/2 },\r\n    last_target = {},\r\n    t = 0,\r\n    q = 10,\r\n    da = [],\r\n    type = \"l\";\r\n\r\n  for (let i = 0; i < 100; i++) {\r\n    if(Math.random() > 0.25){\r\n        type = \"l\";\r\n      }else{\r\n        type = \"o\";\r\n      }\r\n    ropes.push(\r\n      new rope(\r\n        w / 2,\r\n        h / 2,\r\n        (Math.random() * 1 + 0.5) * 500,\r\n        Math.random() * 0.4 + 0.1,\r\n        Math.random()*15+5,\r\n        type\r\n      )\r\n    );\r\n    randl.push(Math.random() * 2 - 1);\r\n    da.push(0);\r\n  }\r\n\r\n  //place for objects in animation\r\n  function draw() {\r\n\r\n    if (mouse.x) {\r\n      target.errx = mouse.x - target.x;\r\n      target.erry = mouse.y - target.y;\r\n    } else {\r\n      target.errx =\r\n        w / 2 +\r\n        (h / 2 - q) *\r\n          Math.sqrt(2) *\r\n          Math.cos(t) /\r\n          (Math.pow(Math.sin(t), 2) + 1) -\r\n        target.x;\r\n      target.erry =\r\n        h / 2 +\r\n        (h / 2 - q) *\r\n          Math.sqrt(2) *\r\n          Math.cos(t) *\r\n          Math.sin(t) /\r\n          (Math.pow(Math.sin(t), 2) + 1) -\r\n        target.y;\r\n    }\r\n\r\n    target.x += target.errx / 10;\r\n    target.y += target.erry / 10;\r\n\r\n    t += 0.01;\r\n\r\n    for (let i = 0; i < ropes.length; i++) {\r\n      if (randl[i] > 0) {\r\n        da[i] += (1 - randl[i]) / 10;\r\n      } else {\r\n        da[i] += (-1 - randl[i]) / 10;\r\n      }\r\n      ropes[i].update({\r\n        x:\r\n          target.x +\r\n          randl[i] * rl * Math.cos((i * 2 * Math.PI) / ropes.length + da[i]),\r\n        y:\r\n          target.y +\r\n          randl[i] * rl * Math.sin((i * 2 * Math.PI) / ropes.length + da[i])\r\n      });\r\n      ropes[i].show();\r\n    }\r\n    last_target.x = target.x;\r\n    last_target.y = target.y;\r\n  }\r\n\r\n  //mouse position\r\n  canvas.addEventListener(\r\n    \"mousemove\",\r\n    function (e) {\r\n      last_mouse.x = mouse.x;\r\n      last_mouse.y = mouse.y;\r\n\r\n      mouse.x = e.pageX - this.offsetLeft;\r\n      mouse.y = e.pageY - this.offsetTop;\r\n    },\r\n    false\r\n  );\r\n\r\n  canvas.addEventListener(\"mouseleave\", function(e) {\r\n    mouse.x = false;\r\n    mouse.y = false;\r\n  });\r\n\r\n  //animation frame\r\n  function loop() {\r\n    window.requestAnimFrame(loop);\r\n    c.clearRect(0, 0, w, h);\r\n    draw();\r\n  }\r\n\r\n  //window resize\r\n  window.addEventListener(\"resize\", function () {\r\n    (w = canvas.width = window.innerWidth),\r\n      (h = canvas.height = window.innerHeight);\r\n    loop();\r\n  });\r\n\r\n  //animation runner\r\n  loop();\r\n  setInterval(loop, 1000 / 60);\r\n};\r\n"],"file":"main.js"}