{"version":3,"names":[],"mappings":"","sources":["adapt.js"],"sourcesContent":["(function () {\r\n    let adaptivItems = document.querySelectorAll(\"[data-adaptiv]\");\r\n    let defaultPlace = [];\r\n    // console.log(defaultPlace);\r\n\r\n    let adaptivItemsArray = [];\r\n\r\n    let adaptivMatch = [];\r\n    //Заполняем массивы\r\n    if (adaptivItems.length > 0) {\r\n        let index = 0;\r\n        for (let i = 0; i < adaptivItems.length; i++) {\r\n            const adaptivElement = adaptivItems[i];\r\n            const adaptivMove = adaptivElement.getAttribute(\"data-adaptiv\");\r\n            if (adaptivMove != \"\") {\r\n                const adaptivArray = adaptivMove.split(\",\");\r\n                const adaptivPlace = adaptivArray[1] ? adaptivArray[1].trim() : \"last\";\r\n                const adaptivBreakpoint = adaptivArray[2]\r\n                    ? adaptivArray[2].trim()\r\n                    : \"768\";\r\n                const adaptivType =\r\n                    adaptivArray[3] === \"min\" ? adaptivArray[3].trim() : \"max\";\r\n                const adaptivDestination = document.querySelector(\r\n                    \".\" + adaptivArray[0].trim()\r\n                );\r\n                if (adaptivArray.length > 0 && adaptivDestination) {\r\n                    adaptivElement.setAttribute(\"data-adaptiv-i\", index);\r\n                    //Заполняем массив первоначальных позиций\r\n                    defaultPlace[index] = {\r\n                        parent: adaptivElement.parentNode,\r\n                        i: indexParent(adaptivElement),\r\n                    };\r\n                    //Заполняем массив элементов\r\n                    adaptivItemsArray[index] = {\r\n                        element: adaptivElement,\r\n                        destination: document.querySelector(\".\" + adaptivArray[0].trim()),\r\n                        place: adaptivPlace,\r\n                        breakpoint: adaptivBreakpoint,\r\n                        type: adaptivType,\r\n                    };\r\n                    index++;\r\n                }\r\n            }\r\n        }\r\n        SortAdapt(adaptivItemsArray);\r\n\r\n        //Создаем события в точке брейкпоинта\r\n        for (let i = 0; i < adaptivItemsArray.length; i++) {\r\n            const element = adaptivItemsArray[i];\r\n            const adaptivBreakpoint = element.breakpoint;\r\n            const adaptivType = element.type;\r\n\r\n            adaptivMatch.push(\r\n                window.matchMedia(\r\n                    \"(\" + adaptivType + \"-width: \" + adaptivBreakpoint + \"px)\"\r\n                )\r\n            );\r\n            adaptivMatch[i].addListener(funcAdapt);\r\n        }\r\n    }\r\n    //Основная функция\r\n    function funcAdapt() {\r\n        for (let i = 0; i < adaptivItemsArray.length; i++) {\r\n            const element = adaptivItemsArray[i];\r\n            const adaptivElement = element.element;\r\n            const adaptivDestination = element.destination;\r\n            const adaptivPlace = element.place;\r\n            const adaptivBreakpoint = element.breakpoint;\r\n            const adaptClass = \"adapt_\" + adaptivBreakpoint;\r\n\r\n            if (adaptivMatch[i].matches) {\r\n                if (!adaptivElement.classList.contains(adaptClass)) {\r\n                    let actualIndex = adaptivPlace;\r\n\r\n                    if (adaptivPlace === \"first\") {\r\n                        actualIndex = indexGetParentArr(adaptivDestination)[0];\r\n                    } else if (adaptivPlace === \"last\") {\r\n                        actualIndex = indexGetParentArr(adaptivDestination).length;\r\n                    }\r\n                    adaptivDestination.insertBefore(\r\n                        adaptivElement,\r\n                        adaptivDestination.children[actualIndex]\r\n                    );\r\n                    adaptivElement.classList.add(adaptClass);\r\n                }\r\n            } else {\r\n                if (adaptivElement.classList.contains(adaptClass)) {\r\n                    backElement(adaptivElement);\r\n                    adaptivElement.classList.remove(adaptClass);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    //Вызов основной функции\r\n    funcAdapt();\r\n\r\n    //Функция возврата на место\r\n    function backElement(element) {\r\n        const Index = element.getAttribute(\"data-adaptiv-i\");\r\n        const originalPlace = defaultPlace[Index];\r\n        const parentPlace = originalPlace[\"parent\"];\r\n        const indexPlace = originalPlace[\"i\"];\r\n        const actualIndex = indexGetParentArr(parentPlace, true)[indexPlace];\r\n        parentPlace.insertBefore(element, parentPlace.children[actualIndex]);\r\n    }\r\n    //Функция получения индекса внутри родителя\r\n    function indexParent(element) {\r\n        var children = Array.prototype.slice.call(element.parentNode.children);\r\n        return children.indexOf(element);\r\n    }\r\n    //Функция получения массива индексов элементов внутри родителя\r\n    function indexGetParentArr(parent, back) {\r\n        const children = parent.children;\r\n        const childrenArray = [];\r\n        for (let i = 0; i < children.length; i++) {\r\n            const childrenElement = children[i];\r\n            if (back) {\r\n                childrenArray.push(i);\r\n            } else {\r\n                //Исключая перенесенный элемент\r\n                if (childrenElement.getAttribute(\"data-adaptiv\") == null) {\r\n                    childrenArray.push(i);\r\n                }\r\n            }\r\n        }\r\n        return childrenArray;\r\n    }\r\n    //Сортировка объекта\r\n    function SortAdapt(arr) {\r\n        arr.sort(function (a, b) {\r\n            if (a.breakpoint > b.breakpoint) {\r\n                return -1;\r\n            } else {\r\n                return 1;\r\n            }\r\n        });\r\n        arr.sort(function (a, b) {\r\n            if (a.place > b.place) {\r\n                return 1;\r\n            } else {\r\n                return -1;\r\n            }\r\n        });\r\n    }\r\n})();"],"file":"adapt.js"}